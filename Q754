754. Reach a Number
You are standing at position 0 on an infinite number line. There is a goal at position target.

On each move, you can either go left or right. During the n-th move (starting from 1), you take n steps.

Return the minimum number of steps required to reach the destination.

Example 1:
Input: target = 3
Output: 2
Explanation:
On the first move we step from 0 to 1.
On the second step we step from 1 to 3.
Example 2:
Input: target = 2
Output: 3
Explanation:
On the first move we step from 0 to 1.
On the second move we step  from 1 to -1.
On the third move we step from -1 to 2.
Note:
target will be a non-zero integer in the range [-10^9, 10^9]





// memory limit exceed solution
class Solution {
public:
    int reachNumber(int target) {
        queue<int> positions; 
        positions.push(0); 
        
        int steps=0;
        while (!positions.empty()) {
            int n=(int)positions.size();
            while (n--) {
                int pos = positions.front(); positions.pop();
                if (pos==target)
                    return steps;
                    positions.push(pos+steps+1);
                    positions.push(pos-(steps+1));
            }
            ++steps;
        }
        return -1;
    }
};

// mathmatical solution 
class Solution {
public:
    int reachNumber(int target) {
        if (target<0) target = -target;
        
        int sum=0, step=0; 
        while (sum<target) {
            ++step;
            sum += step;
        }
        
        sum -= target;
        
        return ((sum%2)==0 ? step : step + 1 + (step%2)) ;
    }
};
