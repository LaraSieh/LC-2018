844. Backspace String Compare
DescriptionHintsSubmissionsDiscussSolution
Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.

Example 1:

Input: S = "ab#c", T = "ad#c"
Output: true
Explanation: Both S and T become "ac".
Example 2:

Input: S = "ab##", T = "c#d#"
Output: true
Explanation: Both S and T become "".
Example 3:

Input: S = "a##c", T = "#a#c"
Output: true
Explanation: Both S and T become "c".
Example 4:

Input: S = "a#c", T = "b"
Output: false
Explanation: S becomes "c" while T becomes "b".
Note:

1 <= S.length <= 200
1 <= T.length <= 200
S and T only contain lowercase letters and '#' characters.

// o(n) time o(1) space
class Solution {
public:
    bool backspaceCompare(string S, string T) {
        trim(S);
        trim(T);
        
        return (S==T);            
    }
    
    void trim(string& S) {
        int n = (int)S.size(),j=0;
        for (int i=0; i<n; ++i) {
            if (S[i] != '#') {
                S[j++] = S[i];
            } else {
                if (j>0) --j;
            }
        }
        S.resize(j);
    }
};


// O(n)
class Solution {
public:
    bool backspaceCompare(string S, string T) {
        string s, t;
        
        trim(S,s);
        trim(T,t);
        
        return (s==t);            
    }
    
    void trim(const string& S, string& s) {
        for (char c : S) {
            if (c != '#') {
                s += c;
            } else {
               if (!s.empty()) s.pop_back();
            }
        }
    }
};

// O(n) O(1) yet not modify the original string
class Solution {
public:
    bool backspaceCompare(string S, string T) {
        for (int i = S.length() - 1, j = T.length() - 1;;i--, j--) {
            for (int b = 0; i >= 0 && (b || S[i] == '#'); --i) 
                b +=  S[i] == '#' ? 1 : -1;
            for (int b = 0; j >= 0 && (b || T[j] == '#'); --j) 
                b +=  T[j] == '#' ? 1 : -1;
            if (i < 0 || j < 0 || S[i] != T[j]) 
                return i == -1 && j == -1;
        }
    }
};
