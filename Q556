556. Next Greater Element III
Given a positive 32-bit integer n, you need to find the smallest 32-bit integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive 32-bit integer exists, you need to return -1.

Example 1:

Input: 12
Output: 21
 

Example 2:

Input: 21
Output: -1



class Solution {
public:
    int nextGreaterElement(int n) {
        auto digits = to_string(n);
        next_permutation(begin(digits), end(digits));
        auto res = stoll(digits);
        return (res > INT_MAX || res <= n) ? -1 : res;
    }
};

class Solution {
public:
    int nextGreaterElement(int n) {
        string digits = to_string(n);
        int len = (int)digits.size(), i=len-1;
        while(i > 0) {
            if (digits[i] > digits[i - 1]) break;
            --i;
        }
        if (i == 0) return -1;
        for (int j=len-1; j>=i; --j) {
            if (digits[j] > digits[i-1]) {
                swap(digits[j], digits[i-1]);
                break;
            }
        }
        sort(digits.begin() + i, digits.end());
        long long res = stoll(digits);
        return res > INT_MAX ? -1 : res;
    }
};



