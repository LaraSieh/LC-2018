214. Shortest Palindrome
Given a string s, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.

Example 1:

Input: "aacecaaa"
Output: "aaacecaaa"
Example 2:

Input: "abcd"
Output: "dcbabcd"

class Solution {
public:
    string shortestPalindrome(string s) {
        int n = s.size();
        string prefix(s);
        reverse(prefix.begin(), prefix.end());
        
        for (int i=0; i<n; ++i) {
            if (s.substr(0,n-i) == prefix.substr(i))
                return (prefix.substr(0,i)+s);
        }
        return "";
    }
};


//KMP is a string matching algorithm that runs in O(n+m)O(n+m) times, 
//where nn and mm are sizes of the text and string to be searched respectively. 
class Solution {
public:
    string shortestPalindrome(string s) {
        int n = s.size();
        string prefix(s);
        reverse(prefix.begin(), prefix.end());
        string sNew = s + "#" + prefix;
        int nNew = sNew.size();
        vector<int> f(nNew, 0);
        for (int i = 1; i < nNew; i++) {
            int t = f[i - 1];
            while (t > 0 && sNew[i] != sNew[t])
                t = f[t - 1];
            if (sNew[i] == sNew[t])
                ++t;
            f[i] = t;
        }
        return prefix.substr(0, n - f[nNew - 1]) + s;
    }
};
