
5. 3Sum
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

// O(n*n)
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        
        int total = nums.size();
        vector<vector<int>> answer;
        for (int i=0; i<total; ++i) {
            if (nums[i]>0) 
                return answer;
            int left=i+1, right=total-1;
            while (left < right) {
                if (nums[left]+nums[right]+nums[i]==0) {
                    int first = nums[left], second = nums[right];
                    answer.push_back({nums[i],first,second});
                    while (left<right&&nums[left]==first) ++left;
                    while (left<right&&nums[right]==second) --right; 
                }
                else if (nums[left]+nums[right]>-nums[i]) {
                    --right;
                } else {
                    ++left;
                }
            }
            
            while ((i+1<total) && (nums[i]==nums[i+1])) ++i;
        }
        
        return answer;
    }
};
