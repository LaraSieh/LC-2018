
Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example:

Input: "babad"

Output: "bab"

Note: "aba" is also a valid answer.
 

Example:

Input: "cbbd"

Output: "bb"


// O(n^2) time, O(constant) space
class Solution {
public:
    string longestPalindrome(string s) {
        int n=s.size(), maxLen=0;
        
        int start=0, end=1;
        for (int i=0; i<n && (i<n-(end-start)/2); ) {
            int j=i, k=i;
            
            //skip duplicates
            while (k<n-1 && s[k+1]==s[k]) ++k;
                
            i = k+1;
            while (k<n-1 && j>0 && s[k+1]==s[j-1]) {
                ++k; --j;
            }
            
            if (k-j+1 > maxLen) {
                start = j; end = k;
                maxLen = end-start+1;            
            }
        }
        
        return s.substr(start,maxLen);
    }
};


// O(n) linear

https://articles.leetcode.com/longest-palindromic-substring-part-ii/
