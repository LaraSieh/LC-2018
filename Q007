

7. Reverse Integer

Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output:  321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only hold integers within the 32-bit signed integer range. 
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.


// S1 37ms
class Solution {
public:
    int reverse(int x) {
        int isSigned = 1;
        
        if (x<0) {
            x = -x;
            isSigned = -1;
        }
        
        int reversed = 0;
        while (x>0) {
            // check on overflow
            if (reversed > (INT_MAX/10)) {
                return 0;
            }
            int digit = x%10;
            reversed = reversed*10 + digit;
            
            x /= 10;
        }
        
        return (isSigned*reversed);
    }
};


// S2 30ms 
class Solution {
public:
    int reverse(int x) {        
        int reversed = 0;
        
        while (x) {
            int saved = reversed;
            reversed = reversed*10 + x%10;
            //check if overflowed
            if (saved != (reversed/10)) return 0;
            
            x /= 10;
        }
        
        return reversed;
    }
};
