104. Maximum Depth of Binary Tree
DescriptionHintsSubmissionsDiscussSolution
Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its depth = 3.

class Solution {
public:
    int maxDepth(TreeNode* root) {
        if (!root) return 0;
        
        return (max(maxDepth(root->left),maxDepth(root->right)) + 1);
    }
};

class Solution {
public:
    int maxDepth(TreeNode* root) {
        int depth=0;
        
        dfs(root,0,depth);
        return depth;
    }
    
    void dfs(TreeNode *root, int d, int& depth) {
        if (!root) return;
        
        depth = max(depth, d+1);
        dfs(root->left, d+1, depth);
        dfs(root->right, d+1, depth);
    }
};
