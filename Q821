821. Shortest Distance to a Character
DescriptionHintsSubmissionsDiscussSolution
Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.

Example 1:

Input: S = "loveleetcode", C = 'e'
Output: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]
 

Note:

S string length is in [1, 10000].
C is a single character, and guaranteed to be in string S.
All letters in S and C are lowercase.

class Solution {
public:
    vector<int> shortestToChar(string S, char C) {
        int n=(int)S.size();
        
        vector<int> distance(n,n);
        int left=-n, right = S.find(C);
        if (right == string::npos) 
            right = 2*n; 
        for (int i=0; i<n; ++i) {
            distance[i] = min(i-left,right-i);
            if (right==i) {
                left = right;
                right = S.find(C,right+1);
                if (right == string::npos)
                    right = 2*n;
            }
        }
        return distance;
    }
};
