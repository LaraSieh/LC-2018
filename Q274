274. H-Index
Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.

According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, and the other N âˆ’ h papers have no more than h citations each."

Example:

Input: citations = [3,0,6,1,5]
Output: 3 
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had 
             received 3, 0, 6, 1, 5 citations respectively. 
             Since the researcher has 3 papers with at least 3 citations each and the remaining 
             two with no more than 3 citations each, her h-index is 3.
Note: If there are several possible values for h, the maximum one is taken as the h-index.




// 4ms
class Solution {
public:
    int hIndex(vector<int>& citations) {
        sort(citations.begin(), citations.end());
        
        int n=(int)citations.size();
        for (int i=0; i<n; ++i) {
            if ((n-i) <= citations[i]) {
                return n-i;
            } 
        }
        return 0;
    }
};

// faster, 0ms
class Solution {
public:
    int hIndex(vector<int>& citations) {
        int n = citations.size();
        make_heap(citations.begin(), citations.end());
        for(int h=n; h>0; --h) {
            while(!citations.empty() && citations[0] >= h) {
                pop_heap(citations.begin(), citations.end());
                citations.pop_back();
            }
            if(n - citations.size() >= h) return h;
        }
        return 0;
    }
};
