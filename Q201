201. Bitwise AND of Numbers Range
Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.

Example 1:

Input: [5,7]
Output: 4
Example 2:

Input: [0,1]
Output: 0


// solution 1
class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        int result=~0;
        //最后的数是该数字范围内所有的数的左边共同的部分
        while ((m&result) != (n&result)) {
            result <<= 1;
        }
        return (m&result);  
    }
};

// solution 2
class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        int result=0;
        //最后的数是该数字范围内所有的数的左边共同的部分
        while (m != n) {
            m >>= 1;
            n >>= 1;
            ++result;
        }
        return (m << result);  
    }
};


//solution 3
class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        return (n > m) ? (rangeBitwiseAnd(m / 2, n / 2) << 1) : m;  
    }
};

//solution 4
class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        while (m < n) n &= (n - 1);
        return n; 
    }
};
