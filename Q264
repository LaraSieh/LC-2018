264. Ugly Number II
Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. 

Example:

Input: n = 10
Output: 12
Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
Note:  

1 is typically treated as an ugly number.
n does not exceed 1690.

class Solution {
public:
    int nthUglyNumber(int n) {
        int i2=0, i3=0, i5=0;
        vector<int> uglies = {1};
        
        while (uglies.size()<n) {
            int m2 = uglies[i2] * 2;
            int m3 = uglies[i3] * 3;
            int m5 = uglies[i5] * 5;
            
            int m = min(m2, min(m3,m5));
            uglies.push_back(m);
            // it's important we check on every number,m2/m3/m5
            // because there are duplicates
            if (m==m2) ++i2;
            if (m==m3) ++i3;
            if (m==m5) ++i5;
        }

        return uglies.back();
    }
};
