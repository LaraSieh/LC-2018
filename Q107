107. Binary Tree Level Order Traversal II
Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its bottom-up level order traversal as:
[
  [15,7],
  [9,20],
  [3]
]



class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> levels;
        
        reverseLevel(root,0,levels);
        reverse(levels.begin(),levels.end());
        return levels;
    }
    
    void reverseLevel(TreeNode *node, int level, vector<vector<int>>& levels) {
        if (node==nullptr) return;
        
        if (levels.size()<=level) {
            levels.push_back(vector<int>{});
        }
        levels[level].push_back(node->val);
        reverseLevel(node->left,level+1,levels);
        reverseLevel(node->right,level+1,levels);
    }
};
