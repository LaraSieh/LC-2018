199. Binary Tree Right Side View
Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

Example:

Input: [1,2,3,null,5,null,4]
Output: [1, 3, 4]
Explanation:

   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---


class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        queue<TreeNode *> q;
        if (root) q.push(root);
        
        vector<int> rightSide;
        while (!q.empty()) {
            int levelSize = q.size();            
            TreeNode *node;
            while (levelSize--) {
                node = q.front(); q.pop();
                if (node->left) q.push(node->left);
                if (node->right) q.push(node->right);
            }
            
            rightSide.push_back(node->val);            
        }

        return rightSide;
    }
};
