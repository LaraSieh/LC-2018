224. Basic Calculator
Implement a basic calculator to evaluate a simple expression string.

The expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces .

Example 1:

Input: "1 + 1"
Output: 2
Example 2:

Input: " 2-1 + 2 "
Output: 3
Example 3:

Input: "(1+(4+5+2)-3)+(6+8)"
Output: 23
Note:
You may assume that the given expression is always valid.
Do not use the eval built-in library function.



class Solution {
public:
    int calculate(string s) {
        int result=0, op=1, n=(int)s.size();
        stack<int> calculatorStack;
        
        for (int i=0; i<(int)s.size(); ++i) {
            char c = s[i];
            if (isdigit(c)) {
                int num = 0;
                while (i<n && isdigit(c)) {
                    num = num * 10 + c - '0';
                    c = s[++i];
                }
                result += op * num;
                --i;                
            } else if (c =='+') {
                op = 1;
            } else if (c =='-') {
                op = -1;
            } else if (c == '(') {
                calculatorStack.push(result);
                calculatorStack.push(op);
                // reinitiate for the value in ()
                result = 0;
                op = 1;
            } else if (c == ')') {
                result *= calculatorStack.top();
                calculatorStack.pop();
                result += calculatorStack.top();
                calculatorStack.pop();
            } 
        }
        
        return result;
    }
};
