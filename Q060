60. Permutation Sequence
The set [1,2,3,...,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order, we get the following sequence for n = 3:

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

Note:

Given n will be between 1 and 9 inclusive.
Given k will be between 1 and n! inclusive.
Example 1:

Input: n = 3, k = 3
Output: "213"
Example 2:

Input: n = 4, k = 9
Output: "2314"


// like this solution, copied from discussion
class Solution {
public:
    string getPermutation(int n, int k) {
        string kthSequence;
        int factorial[n] = {1};
        vector<char> number(n,'1');
        
        for (int i=1; i<n; ++i) {
            factorial[i] = i*factorial[i-1]; 
        }
        for (int i=0;i<n;++i) {
            number[i] += i;
        }
        
        --k;
        for (int i=n-1; i>=0; --i) {
            int j = k/factorial[i];
            k %= factorial[i];
            kthSequence.push_back(number[j]);
            number.erase(number.begin()+j);
        }
        
        return kthSequence;
    }
};
