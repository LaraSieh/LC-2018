209. Minimum Size Subarray Sum
Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum â‰¥ s. If there isn't one, return 0 instead.

Example: 

Input: s = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: the subarray [4,3] has the minimal length under the problem constraint.
Follow up:
If you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log n). 


Related Topics 

Similar Questions 
Minimum Window SubstringMaximum Size Subarray Sum Equals kMaximum Length of Repeated Subarray
C++	

class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        int minCount=INT_MAX, start=0, sum=0;
        
        for (int i=0; i<(int)nums.size(); ++i) {
            sum += nums[i];
            if (sum>=s) {
                while (sum - nums[start] >= s) {
                    sum -= nums[start];
                    ++start;
                }
                minCount = min(minCount,i-start+1);
                if (minCount==1) 
                    return 1;
            }
        }
        
        return minCount==INT_MAX ? 0 : minCount;
    }
};
